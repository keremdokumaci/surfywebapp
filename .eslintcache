[{"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\reportWebVitals.js":"1","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Layout\\components\\header.js":"2","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\App.js":"3","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Layout\\components\\footer.js":"4","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\components\\chatCard.js":"5","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\index.js":"6","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\components\\modal.js":"7","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\components\\newChatRoomPopup.js":"8","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\index.js":"9","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Layout\\index.js":"10","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\utils\\axios\\index.js":"11","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\api\\index.js":"12","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\contexts\\ChatContext.js":"13","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Chat\\index.js":"14","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\components\\messagebox.js":"15"},{"size":362,"mtime":1607623446595,"results":"16","hashOfConfig":"17"},{"size":1277,"mtime":1608547290325,"results":"18","hashOfConfig":"17"},{"size":915,"mtime":1608578689675,"results":"19","hashOfConfig":"17"},{"size":1147,"mtime":1608548439393,"results":"20","hashOfConfig":"17"},{"size":2344,"mtime":1608581381263,"results":"21","hashOfConfig":"17"},{"size":3937,"mtime":1608502146464,"results":"22","hashOfConfig":"17"},{"size":467,"mtime":1607640535650,"results":"23","hashOfConfig":"17"},{"size":4322,"mtime":1608501267337,"results":"24","hashOfConfig":"17"},{"size":500,"mtime":1607623446595,"results":"25","hashOfConfig":"17"},{"size":403,"mtime":1608471528130,"results":"26","hashOfConfig":"17"},{"size":475,"mtime":1608482169642,"results":"27","hashOfConfig":"17"},{"size":580,"mtime":1608499103792,"results":"28","hashOfConfig":"17"},{"size":930,"mtime":1608581510962,"results":"29","hashOfConfig":"17"},{"size":3644,"mtime":1608581409172,"results":"30","hashOfConfig":"17"},{"size":1461,"mtime":1608544897731,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tls5m6",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\reportWebVitals.js",[],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Layout\\components\\header.js",["68","69"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginBtn:{\r\n        right:0,\r\n        position: 'absolute',\r\n        marginRight: '3%'\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    navbar: {\r\n        right:0,\r\n    },\r\n    routerLink: {\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();\r\n    const styles = props.style;\r\n    return(\r\n        <React.Fragment style={styles}>\r\n            <CssBaseline />\r\n            <AppBar position=\"relative\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Surfy\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\App.js",[],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Layout\\components\\footer.js",[],["70","71"],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\components\\chatCard.js",[],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\index.js",["72","73","74","75"],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\components\\modal.js",[],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\components\\newChatRoomPopup.js",["76"],"import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {CreateChatRoom} from '../api/index';\r\n\r\n\r\nconst NewChatRoomPopup = (props) => {\r\n    const {openModal,setOpenModal} = props;\r\n    const [email,setEmail] = useState(null);\r\n    const [password,setPassword] = useState(null);\r\n    const [chatRoomImage,setChatRoomImage] = useState(null);\r\n    const [title,setTitle] = useState(null);\r\n    const [description,setDescription] = useState(null);\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const createChatRoom = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const [response,error] = await CreateChatRoom({email:email,password:password,imageUrl:chatRoomImage,title:title,description:description});\r\n        if(!!response)\r\n        {\r\n            setOpenModal(false);\r\n        }\r\n    }\r\n\r\n    const emailChange = (val) => {\r\n        setEmail(val.target.value);\r\n    }\r\n\r\n    const passwordChange = (val) => {\r\n        setPassword(val.target.value);\r\n    }\r\n\r\n    const chatroomImageChange = (val) => {\r\n        setChatRoomImage(val.target.value);\r\n    }\r\n\r\n    const titleChange = (val) => {\r\n        setTitle(val.target.value);\r\n    }\r\n\r\n    const descriptionChange = (val) => {\r\n        setDescription(val.target.value);\r\n    }\r\n\r\n    return(\r\n        <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Konuşma Başlat</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Konuşma odası oluşturmak için lütfen aşağıdaki alanları doldurunuz.\r\n                </DialogContentText>\r\n                <form onSubmit={createChatRoom}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        autoComplete={false}\r\n                        onChange={emailChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        label=\"Başlık\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        autoComplete={false}\r\n                        onChange={titleChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"description\"\r\n                        label=\"Açıklama\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        autoComplete={false}\r\n                        onChange={descriptionChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"image\"\r\n                        label=\"Resim Adresi\"\r\n                        type=\"url\"\r\n                        fullWidth\r\n                        autoComplete={false}\r\n                        onChange={chatroomImageChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        label=\"Şifre\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        onChange={passwordChange}\r\n                    />\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type='submit' color=\"primary\">\r\n                            Create\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n                \r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default NewChatRoomPopup;",["77","78"],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\index.js",[],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Layout\\index.js",["79"],"import React from 'react';\r\nimport Header from './components/header';\r\nimport Footer from './components/footer';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Layout = ({children}) => {\r\n    return(\r\n        <>\r\n            <Header/>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n            <Footer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\utils\\axios\\index.js",[],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Home\\api\\index.js",[],["80","81"],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\contexts\\ChatContext.js",["82"],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\Chat\\index.js",["83"],"C:\\Users\\Kerem\\Desktop\\surfy\\surfywebapp\\src\\pages\\components\\messagebox.js",[],{"ruleId":"84","severity":1,"message":"85","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":14},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"84","severity":1,"message":"93","line":5,"column":18,"nodeType":"86","messageId":"87","endLine":5,"endColumn":27},{"ruleId":"84","severity":1,"message":"94","line":50,"column":12,"nodeType":"86","messageId":"87","endLine":50,"endColumn":24},{"ruleId":"84","severity":1,"message":"95","line":50,"column":26,"nodeType":"86","messageId":"87","endLine":50,"endColumn":41},{"ruleId":"84","severity":1,"message":"96","line":58,"column":29,"nodeType":"86","messageId":"87","endLine":58,"endColumn":34},{"ruleId":"84","severity":1,"message":"96","line":28,"column":25,"nodeType":"86","messageId":"87","endLine":28,"endColumn":30},{"ruleId":"89","replacedBy":"97"},{"ruleId":"91","replacedBy":"98"},{"ruleId":"84","severity":1,"message":"99","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":17},{"ruleId":"89","replacedBy":"100"},{"ruleId":"91","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":29,"column":17,"nodeType":"104","endLine":29,"endColumn":39},{"ruleId":"84","severity":1,"message":"105","line":33,"column":12,"nodeType":"86","messageId":"87","endLine":33,"endColumn":19},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'TextField' is defined but never used.","'selectedRoom' is assigned a value but never used.","'setSelectedRoom' is assigned a value but never used.","'error' is assigned a value but never used.",["106"],["107"],"'Container' is defined but never used.",["106"],["107"],"react-hooks/exhaustive-deps","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]